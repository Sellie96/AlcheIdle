import { OnGatewayConnection, OnGatewayDisconnect } from '@nestjs/websockets';
import { Server, Socket } from 'socket.io';
import { AuthService } from 'src/auth/auth.service';
import { User } from 'src/user/user.entity';
import { UsersService } from 'src/user/users.service';
import { AgilityService } from '../agility/agility.service';
import { CookingService } from '../cooking/cooking.service';
import { FiremakingService } from '../firemaking/firemaking.service';
import { FishingService } from '../fishing/fishing.service';
import { MiningService } from '../mining/mining.service';
import { ThievingService } from '../thieving/thieving.service';
import { WoodcuttingService } from '../woodcutting/woodcutting.service';
import { SkillingDto } from './skill.dto';
export declare class SkillsGateway implements OnGatewayConnection, OnGatewayDisconnect {
    private readonly miningService;
    private readonly agilityService;
    private readonly fishingService;
    private readonly woodcuttingService;
    private readonly thievingService;
    private readonly firemakingService;
    private readonly cookingService;
    private authService;
    private usersService;
    server: Server;
    users: number;
    sendResponse: boolean;
    constructor(miningService: MiningService, agilityService: AgilityService, fishingService: FishingService, woodcuttingService: WoodcuttingService, thievingService: ThievingService, firemakingService: FiremakingService, cookingService: CookingService, authService: AuthService, usersService: UsersService);
    handleConnection(client: Socket): Promise<void>;
    handleDisconnect(client: Socket): Promise<void>;
    create(skilling: SkillingDto, client: Socket): Promise<void>;
    getPlayerData(playerData: User, client: Socket): Promise<void>;
}
